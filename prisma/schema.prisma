// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id           String        @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  // here you can add custom fields for your user
  // e.g. name, email, username, roles, etc.
  email        String        @unique
  Habit        Habit[]

  @@map("auth_user")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model HabitRecord {
  id      Int      @id @default(autoincrement())
  date    DateTime
  status  String
  habit   Habit    @relation(fields: [habitId], references: [id])
  habitId Int

  @@unique([date, habitId], name: "habitRecordIdentifier")
  @@map("habit_record")
}

model Habit {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  HabitRecord HabitRecord[]
  user        AuthUser      @relation(fields: [authUserId], references: [id])
  authUserId  String

  @@map("habit")
}
